[{"/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/index.tsx":"1","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/locales/pt/messages.js":"2","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/locales/fr/messages.js":"3","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/locales/en/messages.js":"4","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/reportWebVitals.ts":"5","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/sentry.ts":"6","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/App.tsx":"7","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/ThemedApp.tsx":"8","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/components/Compose.tsx":"9","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/providers/FilterProvider.tsx":"10","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/providers/SettingsProvider.tsx":"11","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/Routes.tsx":"12","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/lib/storage.tsx":"13","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/themes/default/index.ts":"14","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/themes/default/typography.ts":"15","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/themes/default/shadows.ts":"16","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/themes/default/palette.ts":"17","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/themes/default/breakpoints.ts":"18","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/template/DefaultTemplate/index.tsx":"19","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/pages/Jobs/index.tsx":"20","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/pages/Home/index.tsx":"21","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/pages/AboutUs/index.tsx":"22","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/pages/JobView/index.tsx":"23","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/constants/spacing.ts":"24","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/constants/index.ts":"25","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/components/shared/Typography.tsx":"26","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/components/shared/Select.tsx":"27","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/components/AppBar/index.tsx":"28","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/components/JobCard/index.tsx":"29","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/components/FilterDrawer/index.tsx":"30","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/components/SearchBar/index.tsx":"31","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/components/PlanetFilterBar/index.tsx":"32","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/utils/index.tsx":"33","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/components/shared/Checkbox.tsx":"34","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/components/shared/Input.tsx":"35","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/components/NavLink/index.tsx":"36","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/components/LanguageSelect/index.tsx":"37","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/components/LogoWithTitle/index.tsx":"38","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/components/PlanetWithTitle/index.tsx":"39","/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/index.tsx":"40","/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/locales/pt/messages.js":"41","/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/locales/fr/messages.js":"42","/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/locales/en/messages.js":"43","/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/reportWebVitals.ts":"44","/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/sentry.ts":"45","/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/App.tsx":"46","/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/ThemedApp.tsx":"47","/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/providers/SettingsProvider.tsx":"48","/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/providers/FilterProvider.tsx":"49","/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/components/Compose.tsx":"50","/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/Routes.tsx":"51","/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/lib/storage.tsx":"52","/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/themes/default/index.ts":"53","/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/themes/default/typography.ts":"54","/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/themes/default/shadows.ts":"55","/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/themes/default/palette.ts":"56","/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/themes/default/breakpoints.ts":"57","/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/template/DefaultTemplate/index.tsx":"58","/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/pages/Home/index.tsx":"59","/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/pages/Jobs/index.tsx":"60","/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/pages/JobView/index.tsx":"61","/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/pages/AboutUs/index.tsx":"62","/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/constants/spacing.ts":"63","/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/components/shared/Typography.tsx":"64","/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/components/shared/Select.tsx":"65","/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/constants/index.ts":"66","/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/components/AppBar/index.tsx":"67","/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/components/JobCard/index.tsx":"68","/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/components/SearchBar/index.tsx":"69","/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/components/PlanetFilterBar/index.tsx":"70","/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/components/FilterDrawer/index.tsx":"71","/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/utils/index.tsx":"72","/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/components/shared/Checkbox.tsx":"73","/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/components/shared/Input.tsx":"74","/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/components/PlanetWithTitle/index.tsx":"75","/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/components/LanguageSelect/index.tsx":"76","/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/components/LogoWithTitle/index.tsx":"77","/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/components/NavLink/index.tsx":"78"},{"size":955,"mtime":1613645194527,"results":"79","hashOfConfig":"80"},{"size":1585,"mtime":1613901146663,"results":"81","hashOfConfig":"80"},{"size":1525,"mtime":1613901146651,"results":"82","hashOfConfig":"80"},{"size":1488,"mtime":1613901146647,"results":"83","hashOfConfig":"80"},{"size":425,"mtime":1612429457844,"results":"84","hashOfConfig":"80"},{"size":428,"mtime":1613645194527,"results":"85","hashOfConfig":"80"},{"size":505,"mtime":1613897656397,"results":"86","hashOfConfig":"80"},{"size":1901,"mtime":1613897656397,"results":"87","hashOfConfig":"80"},{"size":857,"mtime":1612429457840,"results":"88","hashOfConfig":"80"},{"size":2256,"mtime":1613897656401,"results":"89","hashOfConfig":"80"},{"size":2253,"mtime":1613897656401,"results":"90","hashOfConfig":"80"},{"size":897,"mtime":1613676425026,"results":"91","hashOfConfig":"80"},{"size":407,"mtime":1613897656401,"results":"92","hashOfConfig":"80"},{"size":1837,"mtime":1613897656401,"results":"93","hashOfConfig":"80"},{"size":1784,"mtime":1613897656401,"results":"94","hashOfConfig":"80"},{"size":1012,"mtime":1613645194527,"results":"95","hashOfConfig":"80"},{"size":621,"mtime":1613897656401,"results":"96","hashOfConfig":"80"},{"size":149,"mtime":1612429457848,"results":"97","hashOfConfig":"80"},{"size":1888,"mtime":1613897656401,"results":"98","hashOfConfig":"80"},{"size":7084,"mtime":1613900383992,"results":"99","hashOfConfig":"80"},{"size":2971,"mtime":1613900208857,"results":"100","hashOfConfig":"80"},{"size":1792,"mtime":1613898646013,"results":"101","hashOfConfig":"80"},{"size":5591,"mtime":1613897656401,"results":"102","hashOfConfig":"80"},{"size":235,"mtime":1612429457844,"results":"103","hashOfConfig":"80"},{"size":7718,"mtime":1613897656401,"results":"104","hashOfConfig":"80"},{"size":1672,"mtime":1613676425026,"results":"105","hashOfConfig":"80"},{"size":5219,"mtime":1613897656401,"results":"106","hashOfConfig":"80"},{"size":2344,"mtime":1613901004414,"results":"107","hashOfConfig":"80"},{"size":2920,"mtime":1613897656397,"results":"108","hashOfConfig":"80"},{"size":5080,"mtime":1613897656397,"results":"109","hashOfConfig":"80"},{"size":765,"mtime":1613731934028,"results":"110","hashOfConfig":"80"},{"size":2468,"mtime":1613897656397,"results":"111","hashOfConfig":"80"},{"size":703,"mtime":1613899231235,"results":"112","hashOfConfig":"80"},{"size":1883,"mtime":1613897656401,"results":"113","hashOfConfig":"80"},{"size":2498,"mtime":1613645194527,"results":"114","hashOfConfig":"80"},{"size":883,"mtime":1613645194523,"results":"115","hashOfConfig":"80"},{"size":2436,"mtime":1613897656397,"results":"116","hashOfConfig":"80"},{"size":1272,"mtime":1613900631983,"results":"117","hashOfConfig":"80"},{"size":1701,"mtime":1613897656401,"results":"118","hashOfConfig":"80"},{"size":955,"mtime":1613645194527,"results":"119","hashOfConfig":"120"},{"size":1585,"mtime":1613901146663,"results":"121","hashOfConfig":"120"},{"size":1525,"mtime":1613901146651,"results":"122","hashOfConfig":"120"},{"size":1488,"mtime":1613901146647,"results":"123","hashOfConfig":"120"},{"size":425,"mtime":1612429457844,"results":"124","hashOfConfig":"120"},{"size":428,"mtime":1613645194527,"results":"125","hashOfConfig":"120"},{"size":505,"mtime":1613897656397,"results":"126","hashOfConfig":"120"},{"size":1901,"mtime":1613897656397,"results":"127","hashOfConfig":"120"},{"size":2253,"mtime":1613897656401,"results":"128","hashOfConfig":"120"},{"size":2256,"mtime":1613897656401,"results":"129","hashOfConfig":"120"},{"size":857,"mtime":1612429457840,"results":"130","hashOfConfig":"120"},{"size":897,"mtime":1613676425026,"results":"131","hashOfConfig":"120"},{"size":407,"mtime":1613897656401,"results":"132","hashOfConfig":"120"},{"size":1837,"mtime":1613897656401,"results":"133","hashOfConfig":"120"},{"size":1784,"mtime":1613897656401,"results":"134","hashOfConfig":"120"},{"size":1012,"mtime":1613645194527,"results":"135","hashOfConfig":"120"},{"size":621,"mtime":1613897656401,"results":"136","hashOfConfig":"120"},{"size":149,"mtime":1612429457848,"results":"137","hashOfConfig":"120"},{"size":1888,"mtime":1613897656401,"results":"138","hashOfConfig":"120"},{"size":2971,"mtime":1613900208857,"results":"139","hashOfConfig":"120"},{"size":7084,"mtime":1613900383992,"results":"140","hashOfConfig":"120"},{"size":5591,"mtime":1613897656401,"results":"141","hashOfConfig":"120"},{"size":1792,"mtime":1613898646013,"results":"142","hashOfConfig":"120"},{"size":235,"mtime":1612429457844,"results":"143","hashOfConfig":"120"},{"size":1672,"mtime":1613676425026,"results":"144","hashOfConfig":"120"},{"size":5219,"mtime":1613897656401,"results":"145","hashOfConfig":"120"},{"size":7718,"mtime":1613897656401,"results":"146","hashOfConfig":"120"},{"size":2344,"mtime":1613901004414,"results":"147","hashOfConfig":"120"},{"size":2920,"mtime":1613897656397,"results":"148","hashOfConfig":"120"},{"size":765,"mtime":1613731934028,"results":"149","hashOfConfig":"120"},{"size":2468,"mtime":1613897656397,"results":"150","hashOfConfig":"120"},{"size":5080,"mtime":1613897656397,"results":"151","hashOfConfig":"120"},{"size":703,"mtime":1613899231235,"results":"152","hashOfConfig":"120"},{"size":1883,"mtime":1613897656401,"results":"153","hashOfConfig":"120"},{"size":2498,"mtime":1613645194527,"results":"154","hashOfConfig":"120"},{"size":1701,"mtime":1613897656401,"results":"155","hashOfConfig":"120"},{"size":2436,"mtime":1613897656397,"results":"156","hashOfConfig":"120"},{"size":1272,"mtime":1613900631983,"results":"157","hashOfConfig":"120"},{"size":883,"mtime":1613645194523,"results":"158","hashOfConfig":"120"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},"uxeo9c",{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"161"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"161"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"161"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"161"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"161"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"161"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"161"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"161"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"161"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"161"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"161"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"161"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"161"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"161"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"161"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"161"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"161"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1g86658",{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"294","messages":"295","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"296","messages":"297","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"298","messages":"299","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"300","messages":"301","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"306","messages":"307","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"310","messages":"311","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"312","messages":"313","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"314","messages":"315","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"316","messages":"317","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"318","messages":"319","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"324","messages":"325","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"326","messages":"327","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"328","messages":"329","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"330","messages":"331","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/index.tsx",[],["334","335"],"/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/locales/pt/messages.js",[],"/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/locales/fr/messages.js",[],"/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/locales/en/messages.js",[],"/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/reportWebVitals.ts",[],"/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/sentry.ts",[],"/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/App.tsx",[],"/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/ThemedApp.tsx",["336","337","338","339","340"],"import { makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { Fragment, useEffect } from \"react\";\n\nimport { ThemeProvider } from \"@material-ui/core/styles\";\n\n// components\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Routes from \"./Routes\";\n\n// react-router-dom\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\n// providers\nimport { useSettingsState } from \"providers/SettingsProvider\";\n\n// lib\nimport { getSettingsInStorage } from \"lib/storage\";\n\n// themes\nimport theme from \"themes/default\";\n\nimport { i18n } from \"@lingui/core\";\n\nconst useStyles = makeStyles((theme: Theme) => ({}));\n\nexport type ThemedAppProps = {};\n\n/**\n * @component ThemedApp\n */\nfunction ThemedApp({}: ThemedAppProps) {\n  const classes = useStyles();\n\n  const [settings, setSettings] = useSettingsState();\n\n  useEffect(() => {\n    const localSettings = getSettingsInStorage();\n\n    // check if localSettings exists and also we need to check for diffrence with global setting state value\n    if (localSettings) {\n      // if we found any settings we apply settings\n      setSettings({ ...settings, ...localSettings });\n      i18n.activate(localSettings.lang);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <ThemeProvider theme={theme(settings.type)}>\n      <CssBaseline />\n      <Router>\n        <Routes />\n      </Router>\n      {/* <button\n            onClick={() => {\n              i18n.activate(\"en\");\n            }}\n          >\n            en\n          </button>\n          <button\n            onClick={() => {\n              i18n.activate(\"fr\");\n            }}\n          >\n            french\n          </button>\n          <button\n            onClick={() => {\n              i18n.activate(\"pt\");\n            }}\n          >\n            Portuguese\n          </button> */}\n    </ThemeProvider>\n  );\n}\n\nexport default ThemedApp;\n","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/components/Compose.tsx",[],"/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/providers/FilterProvider.tsx",[],"/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/providers/SettingsProvider.tsx",[],"/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/Routes.tsx",["341"],"import { useHistory } from \"react-router-dom\";\n\n// templates\nimport DefaultTemplate from \"template/DefaultTemplate\";\n\n// react-router-dom\nimport { Route, Switch } from \"react-router-dom\";\n\n// pages\nimport HomePage from \"pages/Home\";\nimport JobsPage from \"pages/Jobs\";\nimport AboutUsPage from \"pages/AboutUs\";\nimport JobViewPage from \"pages/JobView\";\n\nexport type RoutesProps = {};\n\n/**\n * @component Routes\n */\nfunction Routes({}: RoutesProps) {\n  const history = useHistory();\n  history.listen(() => {\n    window.scrollTo(0, 0);\n  });\n\n  return (\n    <DefaultTemplate>\n      <Switch>\n        <Route component={HomePage} exact path=\"/\" />\n        <Route component={JobsPage} exact path=\"/jobs\" />\n        <Route component={JobViewPage} exact path=\"/jobs/:id\" />\n        <Route component={AboutUsPage} exact path=\"/about-us\" />\n      </Switch>\n    </DefaultTemplate>\n  );\n}\n\nexport default Routes;\n","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/lib/storage.tsx",[],"/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/themes/default/index.ts",[],"/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/themes/default/typography.ts",[],"/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/themes/default/shadows.ts",[],"/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/themes/default/palette.ts",[],"/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/themes/default/breakpoints.ts",[],"/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/template/DefaultTemplate/index.tsx",["342","343","344","345","346","347","348","349","350"],"import { ReactElement, ReactNode } from \"react\";\n\nimport { useTheme, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nimport { useScrollTrigger } from \"@material-ui/core\";\n\n// components\nimport Box from \"@material-ui/core/Box\";\nimport Slide from \"@material-ui/core/Slide\";\nimport AppBar from \"components/AppBar\";\nimport FilterBar from \"components/FilterBar\";\nimport Footer from \"components/Footer\";\nimport Container from \"@material-ui/core/Container\";\n\n// constants\nimport { SPACING, SPACING_DOUBLE, SPACING_HALF } from \"constants/spacing\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    overflow: \"hidden\",\n  },\n  containerWrapper: {\n    flex: 1,\n    overflowY: \"auto\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  container: {\n    flex: 1,\n    paddingTop: theme.spacing(SPACING_HALF),\n    paddingBottom: theme.spacing(SPACING_HALF),\n  },\n}));\n\nexport type DefaultTemplateProps = {\n  children: ReactElement;\n};\n\nlet container;\n\n/**\n * @component DefaultTemplate\n * @summary DefaultTemplate default template with just footer and appbar {THIS TEMPLATE IS PROTECTED}\n * @param {boolean} loggedIn\n */\nfunction DefaultTemplate({ children }: DefaultTemplateProps) {\n  const classes = useStyles();\n\n  const theme = useTheme();\n\n  return (\n    <Box\n      width=\"100%\"\n      height=\"100%\"\n      position=\"relative\"\n      display=\"flex\"\n      flexDirection=\"column\"\n      className={classes.root}\n    >\n      {/* <NavigationDrawer /> */}\n\n      <Box position=\"relative\" top={0} left={0} zIndex={theme.zIndex.appBar}>\n        <AppBar />\n      </Box>\n      <div\n        ref={(ref) => (container = ref)}\n        className={classes.containerWrapper}\n      >\n        <Container className={classes.container}>{children}</Container>\n      </div>\n      {/* <Footer /> */}\n    </Box>\n  );\n}\n\nexport default DefaultTemplate;\n","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/pages/Jobs/index.tsx",["351","352"],"import { useState } from \"react\";\n\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\n\nimport {\n  SPACING,\n  SPACING_DOUBLE,\n  SPACING_HALF,\n  SPACING_LEAST,\n} from \"constants/spacing\";\n\nimport _ from \"lodash\";\n\n// components\nimport JobCard from \"components/JobCard\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"components/shared/Typography\";\nimport SearchBar from \"components/SearchBar\";\nimport PlanetFilterBar from \"components/PlanetFilterBar\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Button from \"@material-ui/core/Button\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport FilterDrawer from \"components/FilterDrawer\";\nimport Select, { Option } from \"components/shared/Select\";\n\n// constants\nimport { Jobs as JobList } from \"constants/index\";\n\n// providers\nimport { useFilterState } from \"providers/FilterProvider\";\n\n// icons\nimport FilterIcon from \"@material-ui/icons/FilterListOutlined\";\n// translate\nimport { t } from \"@lingui/macro\";\nimport { Trans } from \"@lingui/macro\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    // alignItems: \"center\",\n  },\n  titleWrapper: {\n    height: 300,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n  },\n  searchBar: {\n    width: 600,\n    marginTop: theme.spacing(SPACING),\n    [theme.breakpoints.down(\"sm\")]: {\n      width: 400,\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"auto\",\n    },\n  },\n  title: {\n    fontWeight: 600,\n    marginBottom: theme.spacing(SPACING_HALF),\n  },\n  grid: {\n    marginBottom: theme.spacing(SPACING_DOUBLE),\n  },\n  cardsParent: {\n    display: \"grid\",\n    marginBottom: \"12px\",\n  },\n  filterActionBar: {\n    display: \"flex\",\n    width: \"100%\",\n    margin: theme.spacing(SPACING, 0, SPACING_DOUBLE, 0),\n    [theme.breakpoints.down(\"sm\")]: {\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n  },\n  filterButton: {\n    \"&:first-child\": {\n      marginRight: theme.spacing(SPACING_LEAST),\n      [theme.breakpoints.down(\"xs\")]: {\n        margin: 0,\n      },\n    },\n    \"&:last-child\": {\n      marginLeft: theme.spacing(SPACING_LEAST),\n      [theme.breakpoints.down(\"xs\")]: {\n        marginTop: theme.spacing(SPACING_LEAST),\n        marginLeft: 0,\n        width: \"100%\",\n      },\n    },\n  },\n  filterSelectWrapper: {\n    display: \"flex\",\n    alignItems: \"center\",\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: theme.spacing(SPACING_HALF),\n    },\n  },\n  filterButtonWrapper: {\n    flex: 1,\n    [theme.breakpoints.down(\"xs\")]: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n  },\n}));\n\nexport type JobsProps = {};\n\n/**\n * @component Jobs\n */\nfunction Jobs({}: JobsProps) {\n  const classes = useStyles();\n\n  const [openDrawer, setOpenDrawer] = useState<boolean>(false);\n\n  const [filter, setFilter] = useFilterState();\n\n  const getFilteredJobs = () => {\n    // filter logic here\n    const searchTerm: string = filter.search;\n    let result = [...JobList];\n\n    console.log(result);\n\n    // filter search\n    result = result.filter(\n      (job) =>\n        !job.title?.toLowerCase().search(searchTerm) ||\n        !job.company.name?.toLowerCase().search(searchTerm)\n    );\n\n    // filter location\n    const locations = filter.locations;\n    if (locations.length > 0) {\n      result = result.filter(\n        (job) =>\n          locations.findIndex(\n            (location) => location.name === job.location.name\n          ) > -1\n      );\n    }\n\n    // filter job types\n    const jobTypes = filter.jobTypes;\n    if (jobTypes.length > 0) {\n      result = result.filter(\n        (job) => jobTypes.findIndex((jobType) => jobType === job.jobType) > -1\n      );\n    }\n\n    // filter job fields\n    const jobFields = filter.jobFields;\n    if (jobFields.length > 0) {\n      result = result.filter(\n        (job) =>\n          jobFields.findIndex((jobField) => jobField === job.jobField) > -1\n      );\n    }\n\n    return result;\n  };\n\n  const onFilterButtonClick = () => {\n    setOpenDrawer(true);\n  };\n\n  const handleSearchInput = (value: string) => {\n    setFilter({ ...filter, search: value });\n  };\n\n  const handleClearFilter = () => {\n    setFilter({\n      search: \"\",\n      locations: [],\n      order: t`newest`,\n      jobFields: [],\n      jobTypes: [],\n    });\n  };\n\n  return (\n    <div className={classes.root}>\n      <FilterDrawer open={openDrawer} onClose={() => setOpenDrawer(false)} />\n\n      <div className={classes.titleWrapper}>\n        <Typography\n          variant=\"h2\"\n          letterSpacing={SPACING_DOUBLE}\n          fontWeight={500}\n        >\n          <Trans>Job List</Trans>\n        </Typography>\n        <SearchBar\n          value={filter.search}\n          placeholder={t`search for job title`}\n          className={classes.searchBar}\n          onChange={handleSearchInput}\n        />\n      </div>\n\n      <Hidden mdDown>\n        <PlanetFilterBar />\n      </Hidden>\n\n      <div className={classes.filterActionBar}>\n        <div className={classes.filterButtonWrapper}>\n          <Button\n            onClick={onFilterButtonClick}\n            className={classes.filterButton}\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<FilterIcon />}\n          >\n            <Trans>Advanced Filter</Trans>\n          </Button>\n          <Button\n            className={classes.filterButton}\n            variant=\"outlined\"\n            color=\"primary\"\n            onClick={handleClearFilter}\n          >\n            <Trans>Clear Filter</Trans>\n          </Button>\n        </div>\n\n        <div className={classes.filterSelectWrapper}>\n          <Hidden lgUp>\n            <PlanetFilterBar shrink />\n          </Hidden>\n\n          <Select\n            onChange={(value: Option) => {\n              setFilter({\n                ...filter,\n                order: value.label.toLowerCase().replace(\" \", \"\"),\n              });\n            }}\n            selected={filter.order}\n            label={t`SORT BY`}\n            options={[\n              { _id: t`newest`, label: t`NEWEST` },\n              { _id: t`oldest`, label: t`OLDEST` },\n              { _id: t`mostpaid`, label: t`MOST PAID` },\n            ]}\n          />\n        </div>\n      </div>\n\n      <div>\n        <Typography\n          className={classes.title}\n          variant=\"h4\"\n          gutterBottom\n          color=\"textSecondary\"\n        >\n          <Trans>TODAY</Trans>\n        </Typography>\n        <div className={classes.cardsParent}>\n          <Grid container spacing={SPACING_HALF}>\n            {getFilteredJobs().map((job, index) => (\n              <Fade\n                in={true}\n                timeout={{ enter: 2 * 100 * (index + 1) }}\n                key={job._id}\n              >\n                <Grid item xs={12} md={6}>\n                  <JobCard {...job} />\n                </Grid>\n              </Fade>\n            ))}\n          </Grid>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Jobs;\n","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/pages/Home/index.tsx",["353","354"],"import { makeStyles, Theme } from \"@material-ui/core/styles\";\n\n// components\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\n// templates\nimport DefaultTemplate from \"template/DefaultTemplate\";\nimport { SPACING } from \"constants/spacing\";\nimport { Link } from \"react-router-dom\";\nimport { Trans } from \"@lingui/macro\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n  heroImage: {\n    userSelect: \"none\",\n    display: \"none\",\n    position: \"absolute\",\n    userDrag: \"none\",\n    bottom: 0,\n    right: 0,\n    [theme.breakpoints.up(\"lg\")]: {\n      width: \"850px\",\n      display: \"block\",\n    },\n  },\n  contentWrapper: {\n    width: \"100%\",\n    height: \"100%\",\n    position: \"relative\",\n  },\n  heroContent: {\n    zIndex: theme.zIndex.appBar,\n    position: \"absolute\",\n    top: \"50%\",\n\n    height: \"auto\",\n    transform: \"translateY(-50%)\",\n  },\n  title: {\n    fontWeight: 700,\n    fontSize: 45,\n    lineHeight: 1.2,\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: 35,\n      lineHeight: 1.2,\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: 24,\n      lineHeight: 1.2,\n    },\n  },\n  siteDescription: {\n    marginBottom: theme.spacing(SPACING),\n  },\n}));\n\nexport type HomeProps = {};\n\n/**\n * @component Home\n */\nfunction Home({}: HomeProps) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <img\n        className={classes.heroImage}\n        src=\"/assets/svg/landing_art.svg\"\n        alt=\"landing art\"\n      />\n      <div className={classes.contentWrapper}>\n        <Box\n          width={{ xs: \"100%\", sm: \"100%\", md: \"65%\", lg: \"50%\" }}\n          height=\"100%\"\n          className={classes.heroContent}\n        >\n          <Typography gutterBottom className={classes.title} variant=\"h2\">\n            <Trans>WELCOME TO</Trans> <br />\n            <Typography\n              className={classes.title}\n              variant=\"h2\"\n              component=\"span\"\n              color=\"primary\"\n            >\n              <Trans>PLANETARY</Trans>\n            </Typography>{\" \"}\n            <Trans>JOB BOARD</Trans>\n          </Typography>\n\n          <Typography className={classes.siteDescription} gutterBottom>\n            <Trans>\n              Lorem Ipsum is simply dummy text of the printing and typesetting\n              industry. Lorem Ipsum has been the industry's standard dummy text\n              ever since the 1500s, when an unknown printer took a galley of\n              type and scrambled it to make a type specimen book. It has\n              survived not only five centuries\n            </Trans>\n          </Typography>\n          <Link to=\"/jobs\">\n            <Button size=\"large\" color=\"primary\" variant=\"contained\">\n              <Trans>Find a Job</Trans>\n            </Button>\n          </Link>\n        </Box>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/pages/AboutUs/index.tsx",["355","356","357"],"import { makeStyles, Theme } from \"@material-ui/core/styles\";\n\n// components\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport { t } from \"@lingui/macro\";\nimport { Trans } from \"@lingui/macro\";\nconst useStyles = makeStyles((theme: Theme) => ({}));\n\nexport type AboutUsProps = {};\n\n/**\n * @component AboutUs\n */\nfunction AboutUs({}: AboutUsProps) {\n  const classes = useStyles();\n\n  return (\n    <Box\n      display=\"flex\"\n      width=\"100%\"\n      height=\"100%\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n    >\n      <Box width=\"600px\">\n        <Typography align=\"center\" variant=\"h4\" gutterBottom>\n          <Trans>About Us</Trans>\n        </Typography>\n        <Typography align=\"center\">\n          <Trans>\n            Lorem Ipsum is simply dummy text of the printing and typesetting\n            industry. Lorem Ipsum has been the industry's standard dummy text\n            ever since the 1500s, when an unknown printer took a galley of type\n            and scrambled it to make a type specimen book. It has survived not\n            only five centuries\n          </Trans>\n        </Typography>\n\n        <Box display=\"flex\" width=\"100%\" justifyContent=\"center\">\n          <IconButton color=\"primary\">\n            <GitHubIcon />\n          </IconButton>\n          <IconButton color=\"primary\">\n            <TwitterIcon />\n          </IconButton>\n          <IconButton color=\"primary\">\n            <InstagramIcon />\n          </IconButton>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n\nexport default AboutUs;\n","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/pages/JobView/index.tsx",["358"],"import { useEffect, useState } from \"react\";\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\n\n// components\nimport Typography from \"components/shared/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Box from \"@material-ui/core/Box\";\n\n// icons\nimport RocketIcon from \"@material-ui/icons/Send\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport CalendarIcon from \"@material-ui/icons/CalendarToday\";\n\n// constants\nimport {\n  SPACING,\n  SPACING_DOUBLE,\n  SPACING_HALF,\n  SPACING_LEAST,\n} from \"constants/spacing\";\nimport { Job, Jobs } from \"constants/index\";\nimport { getDisplayDate } from \"utils\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  brandImage: {\n    width: 124,\n    height: 124,\n    borderRadius: \"50%\",\n    objectFit: \"cover\",\n    objectPosition: \"center\",\n    marginBottom: theme.spacing(SPACING_HALF),\n  },\n  paper: {\n    padding: theme.spacing(SPACING),\n    marginBottom: theme.spacing(SPACING),\n\n    [theme.breakpoints.up(\"sm\")]: {\n      padding: theme.spacing(SPACING_DOUBLE),\n    },\n  },\n  title: {\n    marginBottom: theme.spacing(SPACING_HALF),\n  },\n  header: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: theme.spacing(SPACING_DOUBLE, 0),\n  },\n  calendarWrapper: {\n    display: \"flex\",\n    alignItems: \"center\",\n    color: theme.palette.text.secondary,\n    marginTop: theme.spacing(SPACING),\n  },\n  icon: {\n    marginRight: theme.spacing(SPACING_LEAST),\n  },\n  divider: {\n    margin: theme.spacing(SPACING, 0),\n  },\n  skillChip: {\n    margin: theme.spacing(SPACING_LEAST),\n    \"&:first-child\": {\n      marginLeft: 0,\n    },\n    \"&:last-child\": {\n      marginRight: 0,\n    },\n  },\n}));\n\nexport type JobViewProps = {\n  match: any;\n};\n\n/**\n * @component JobView\n */\nfunction JobView({ match }: JobViewProps) {\n  const classes = useStyles();\n\n  const [job, setJob] = useState<Job | undefined>(undefined);\n\n  const id = match.params.id;\n\n  useEffect(() => {\n    const targetJob = Jobs.find((_) => _._id === id);\n    setJob(targetJob);\n  }, []);\n\n  if (job && !!id) {\n    return (\n      <div>\n        <div className={classes.header}>\n          <img\n            className={classes.brandImage}\n            src={job.company.image}\n            alt={`${job.company.name} logo`}\n          />\n\n          <Typography gutterBottom fontWeight=\"bold\">\n            {job.jobField.toUpperCase()}\n          </Typography>\n          <Typography gutterBottom variant=\"h1\" fontWeight={600}>\n            {job.company.name.toUpperCase()}\n          </Typography>\n          <Typography gutterBottom color=\"primary\" fontWeight=\"bold\">\n            {job.jobType.toUpperCase()}\n          </Typography>\n\n          <div className={classes.calendarWrapper}>\n            <CalendarIcon\n              fontSize=\"small\"\n              className={classes.icon}\n              color=\"inherit\"\n            />\n            <Typography\n              letterSpacing={SPACING_HALF}\n              fontWeight={600}\n              color=\"inherit\"\n            >\n              {getDisplayDate(\n                job.date.getFullYear(),\n                job.date.getMonth(),\n                job.date.getDate()\n              )}\n            </Typography>\n          </div>\n        </div>\n\n        <Paper elevation={2} className={classes.paper}>\n          <Typography\n            variant=\"h4\"\n            letterSpacing={SPACING_DOUBLE * 2}\n            fontWeight={500}\n            className={classes.title}\n          >\n            NESSARAY SKILLS\n          </Typography>\n\n          <div>\n            {job.necessarySkills.map((skill, index) => (\n              <Chip\n                key={index}\n                className={classes.skillChip}\n                color=\"primary\"\n                label={skill}\n              />\n            ))}\n          </div>\n\n          <Divider variant=\"fullWidth\" className={classes.divider} light />\n\n          <Typography\n            variant=\"h4\"\n            letterSpacing={SPACING_DOUBLE * 2}\n            fontWeight={500}\n            className={classes.title}\n          >\n            WHERE WE ARE?\n          </Typography>\n          <Typography fontWeight=\"bold\" color={job.location.color}>\n            {job.location.name.toUpperCase()}\n          </Typography>\n        </Paper>\n\n        <Paper elevation={2} className={classes.paper}>\n          <Typography\n            variant=\"h4\"\n            letterSpacing={SPACING_DOUBLE * 2}\n            fontWeight={500}\n            className={classes.title}\n          >\n            JOB DESCRIPTION\n          </Typography>\n          <Typography>{job.description}</Typography>\n          <Divider variant=\"fullWidth\" light className={classes.divider} />\n\n          <Typography\n            variant=\"h4\"\n            letterSpacing={SPACING_DOUBLE * 2}\n            fontWeight={500}\n            className={classes.title}\n          >\n            CONTACT US\n          </Typography>\n          <IconButton color=\"primary\">\n            <RocketIcon />\n          </IconButton>\n\n          <IconButton color=\"primary\">\n            <MailIcon />\n          </IconButton>\n        </Paper>\n      </div>\n    );\n  } else {\n    return (\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        width=\"100%\"\n        height=\"100%\"\n      >\n        <Typography variant=\"h1\" letterSpacing={SPACING}>\n          NOT FOUND\n        </Typography>\n      </Box>\n    );\n  }\n}\n\nexport default JobView;\n","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/constants/spacing.ts",[],"/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/constants/index.ts",[],"/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/components/shared/Typography.tsx",["359","360"],"import { makeStyles, Theme } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\n\nimport {\n  FontWeightProperty,\n  LetterSpacingProperty,\n} from \"@material-ui/styles/node_modules/csstype\";\n\n// components\nimport MuiTypography, {\n  TypographyProps as MuiTypographyProps,\n  TypographyTypeMap,\n} from \"@material-ui/core/Typography\";\nimport { OverridableComponent } from \"@material-ui/core/OverridableComponent\";\n\nconst TypographyColor = [\n  \"inherit\",\n  \"initial\",\n  \"primary\",\n  \"secondary\",\n  \"textPrimary\",\n  \"textSecondary\",\n  \"error\",\n];\n\nconst useStyles = makeStyles<Theme, TypographyProps<any>>((theme: Theme) => ({\n  root: ({ fontWeight, letterSpacing, color }) => {\n    const innerColor = { color: color as string };\n    return {\n      fontWeight,\n      letterSpacing,\n      ...(!TypographyColor.includes(color as string) && innerColor),\n    };\n  },\n}));\n\nexport type TypographyProps<TLength> = {\n  fontWeight?: FontWeightProperty;\n  letterSpacing?: LetterSpacingProperty<TLength>;\n  color?: typeof TypographyColor | string;\n  component?: React.ElementType<any>;\n} & Omit<MuiTypographyProps, \"color\">;\n\n/**\n * @component Typography\n */\nfunction Typography<TLength>({\n  fontWeight,\n  letterSpacing,\n  className,\n  component,\n  color,\n  ...rest\n}: TypographyProps<TLength>) {\n  const classes = useStyles({ fontWeight, letterSpacing, color, component });\n\n  const rootClasses = clsx(className, classes.root);\n\n  return (\n    <MuiTypography\n      component={component as any}\n      color={\n        TypographyColor.includes(color as string) ? (color as any) : \"inherit\"\n      }\n      className={rootClasses}\n      {...rest}\n    />\n  );\n}\n\nexport default Typography;\n","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/components/shared/Select.tsx",["361"],"import { useState, useEffect, MouseEvent } from \"react\";\nimport { useTheme, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\n\n// components\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Typography from \"components/shared/Typography\";\nimport Checkbox from \"components/shared/Checkbox\";\n\n// icons\nimport DownArrow from \"@material-ui/icons/ChevronRight\";\n\n// constants\nimport { SPACING, SPACING_LEAST } from \"constants/spacing\";\n\nconst WIDTH = 250;\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    width: WIDTH,\n    overflow: \"hidden\",\n  },\n  select: {\n    display: \"flex\",\n    alignItems: \"center\",\n    width: 320,\n    justifyContent: \"space-between\",\n  },\n  baseButton: {\n    width: \"100%\",\n    padding: theme.spacing(SPACING_LEAST),\n  },\n  name: {\n    width: \"100%\",\n  },\n  arrowButton: {\n    transition: theme.transitions.create([\"transform\"]),\n    transform: \"rotate(90deg)\",\n  },\n  arrowDown: {\n    transform: \"rotate(270deg)\",\n  },\n  selectButton: {\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(SPACING_LEAST),\n  },\n  selectButtonWrapper: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  menuRoot: {\n    // marginTop: theme.spacing(SPACING),\n  },\n  menuContainer: {\n    maxHeight: 200,\n    outline: \"none\",\n    overflow: \"auto\",\n  },\n}));\n\nexport type OptionID = string | number;\n\nexport type Option = {\n  _id: OptionID;\n  label: string;\n};\n\nexport type SelectProps = {\n  label?: string;\n  options: Option[];\n} & (\n  | {\n      onChange?: (value: Option) => void;\n      selected?: OptionID;\n      multiSelect?: false;\n    }\n  | {\n      onChange?: (value: Option[]) => void;\n      selected?: OptionID[];\n      multiSelect: true;\n    }\n);\n\n/**\n * @component Select\n * @summary shared Select\n */\nfunction Select({\n  label,\n  options,\n  onChange = () => {},\n  multiSelect = false,\n  selected,\n}: SelectProps) {\n  const theme = useTheme();\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null);\n  const [_selected, setSelected] = useState<OptionID | OptionID[]>(\n    multiSelect ? [] : options[0]._id\n  );\n\n  const upArrowClasses = clsx(\n    classes.arrowButton,\n    Boolean(anchorEl) && classes.arrowDown\n  );\n\n  const onButtonClick = (event: MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const onMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  const getOptions = (id: OptionID | OptionID[]) =>\n    multiSelect\n      ? (id as OptionID[]).map((itemId) =>\n          options.find((_) => _._id === itemId)\n        )\n      : options.find((_) => _._id === (id as OptionID));\n\n  const onMenuItemClick = (item: Option) => {\n    if (multiSelect) {\n      const itemIndex = (_selected as OptionID[])?.findIndex(\n        (selectedItem: OptionID) => selectedItem === item._id\n      );\n\n      if (itemIndex > -1) {\n        setSelected((prevState) => {\n          const newState = [...(prevState as OptionID[])];\n          newState.splice(itemIndex, 1);\n          onChange(getOptions(newState) as any);\n          return newState;\n        });\n      } else {\n        setSelected((prevState) => {\n          const newState = [...(prevState as OptionID[]), item._id];\n          onChange(getOptions(newState) as any);\n          return newState;\n        });\n      }\n    } else {\n      setSelected(item._id);\n      onChange(getOptions(item._id) as any);\n    }\n  };\n\n  const isSelected = (id: OptionID): boolean =>\n    multiSelect && Array.isArray(_selected)\n      ? (_selected as OptionID[]).includes(id)\n      : _selected === id;\n\n  useEffect(() => {\n    if (selected) {\n      setSelected(selected);\n    }\n  }, [selected]);\n\n  return (\n    <div>\n      <div></div>\n      <ButtonBase onClick={onButtonClick} className={classes.selectButton}>\n        <div className={classes.selectButtonWrapper}>\n          <Typography noWrap variant=\"button\" letterSpacing={SPACING}>\n            {label}\n          </Typography>\n          <DownArrow className={upArrowClasses} />\n        </div>\n      </ButtonBase>\n      <Menu\n        className={classes.menuRoot}\n        anchorEl={anchorEl}\n        getContentAnchorEl={null}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={onMenuClose}\n      >\n        <div className={classes.menuContainer}>\n          {options.map((item) => {\n            return (\n              <MenuItem onClick={() => onMenuItemClick(item)} key={item._id}>\n                <Checkbox size=\"small\" checked={isSelected(item._id)} />\n                <Typography\n                  noWrap\n                  variant=\"caption\"\n                  letterSpacing={SPACING}\n                  fontWeight={500}\n                >\n                  {item.label}\n                </Typography>\n              </MenuItem>\n            );\n          })}\n        </div>\n      </Menu>\n    </div>\n  );\n}\n\nexport default Select;\n","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/components/AppBar/index.tsx",["362","363"],"import { makeStyles, Theme } from \"@material-ui/core/styles\";\n\n// components\nimport MuiAppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport LogoWithTitle from \"components/LogoWithTitle\";\nimport Box from \"@material-ui/core/Box\";\nimport NavLink from \"components/NavLink\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nimport { SPACING_LEAST } from \"constants/spacing\";\n// translate\nimport { Trans } from \"@lingui/macro\";\n// providers\nimport { useSettingsState } from \"providers/SettingsProvider\";\nimport { setSettingInStorage } from \"lib/storage\";\nimport LanguageSelect from \"components/LanguageSelect\";\n\n// providers\n// import { useSearchSetState, useSearchState } from \"providers/FilterProvider\";\n\nconst useStyles = makeStyles((theme: Theme) => ({}));\n\nexport type AppBarProps = {};\n\n/**\n * @component AppBar\n */\nfunction AppBar() {\n  const classes = useStyles();\n\n  const [settings, setSettings] = useSettingsState();\n\n  // const setSearch = useSearchSetState();\n\n  // const onSearchBarChange = (value: string) => {\n  //   setSearch((prevState) => ({ ...prevState, term: value }));\n  // };\n\n  // const onLocationBarChange = (value: string) => {\n  //   setSearch((prevState) => ({ ...prevState, location: value }));\n  // };\n\n  return (\n    <MuiAppBar color=\"inherit\" position=\"relative\" elevation={0}>\n      <Toolbar>\n        <LogoWithTitle />\n\n        <Box flex={1}></Box>\n        <Tooltip title=\"toggle dark mode\">\n          <Switch\n            checked={settings.type === \"dark\"}\n            onChange={(event) => {\n              const type = event.target.checked ? \"dark\" : \"light\";\n              setSettings({\n                ...settings,\n                type,\n              });\n\n              setSettingInStorage({ ...settings, type });\n            }}\n          ></Switch>\n        </Tooltip>\n\n        <LanguageSelect\n          languages={[\n            { code: \"pt\", name: \"Portuguese\", flag: \"/images/flags/pt.png\" },\n            { code: \"en\", name: \"English\", flag: \"/images/flags/us.png\" },\n          ]}\n        />\n        <Trans>\n          <NavLink to=\"/jobs\">Jobs</NavLink>\n        </Trans>\n        <Trans>\n          <NavLink to=\"/about-us\">About Us</NavLink>\n        </Trans>\n      </Toolbar>\n    </MuiAppBar>\n  );\n}\n\nexport default AppBar;\n","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/components/JobCard/index.tsx",["364","365","366"],"import { makeStyles, Theme } from \"@material-ui/core/styles\";\n\n// components\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { Link } from \"react-router-dom\";\n\n// constants\nimport { Jobs, Job } from \"constants/index\";\nimport { SPACING_HALF, SPACING_LEAST } from \"constants/spacing\";\n\n// images\nimport EarthImage from \"assets/images/earth.png\";\nimport { getDisplayDate } from \"utils\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    height: \"100%\",\n    width: \"100%\",\n    padding: theme.spacing(SPACING_HALF),\n    cursor: \"pointer\",\n    transition: theme.transitions.create([\"transform\"]),\n    \"&:hover\": {\n      transform: \"scale(1.01)\",\n    },\n    \"&:active\": {\n      transform: \"scale(0.99)\",\n    },\n  },\n  wrapper: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  brandImage: {\n    borderRadius: \"50%\",\n    objectFit: \"cover\",\n    width: 58,\n    height: 58,\n    objectPosition: \"center\",\n    marginRight: theme.spacing(SPACING_HALF),\n  },\n  cardContent: {\n    flex: 1,\n  },\n  locationWrapper: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  boldText: {\n    fontWeight: \"bolder\",\n  },\n  semiBold: {\n    fontWeight: 500,\n  },\n  locationImage: {\n    width: 20,\n    height: 20,\n    margin: theme.spacing(0, SPACING_LEAST / 2),\n  },\n  contentWrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flex: 1,\n  },\n}));\n\nexport type JobCardProps = Job;\n\n/**\n * @component JobCard\n */\nfunction JobCard({\n  _id,\n  company,\n  jobField,\n  description,\n  jobType,\n  location,\n  necessarySkills,\n  title,\n  date,\n}: JobCardProps) {\n  const classes = useStyles();\n\n  return (\n    <Link to={`/jobs/${_id}`}>\n      <Paper className={classes.root} variant=\"elevation\">\n        <div className={classes.wrapper}>\n          <img\n            className={classes.brandImage}\n            src={company.image}\n            alt={`${company.name} logo`}\n          />\n\n          <div className={classes.contentWrapper}>\n            <Typography>{title}</Typography>\n\n            <ListItemText\n              primaryTypographyProps={{\n                className: classes.boldText,\n              }}\n              primary={jobField.toUpperCase()}\n              secondary={company.name}\n              className={classes.cardContent}\n            />\n          </div>\n\n          <div className={classes.locationWrapper}>\n            <Typography color=\"textSecondary\" className={classes.semiBold}>\n              FROM\n            </Typography>\n            <img\n              className={classes.locationImage}\n              alt=\"location\"\n              src={location.image}\n            />\n            <Typography color=\"textSecondary\" className={classes.semiBold}>\n              TODAY\n            </Typography>\n          </div>\n        </div>\n      </Paper>\n    </Link>\n  );\n}\n\nexport default JobCard;\n","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/components/FilterDrawer/index.tsx",["367","368","369","370"],"import { useEffect, useState } from \"react\";\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\n\n// components\nimport Drawer, { DrawerProps } from \"@material-ui/core/Drawer\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Button from \"@material-ui/core/Button\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Checkbox from \"components/shared/Checkbox\";\nimport Typography from \"components/shared/Typography\";\n\n// constants\nimport { SPACING, SPACING_DOUBLE, SPACING_HALF } from \"constants/spacing\";\nimport { JOB_FILEDS, JOB_TYPES } from \"constants/index\";\nimport { useFilterState } from \"providers/FilterProvider\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    width: 300,\n  },\n  drawerWrapper: {\n    padding: theme.spacing(SPACING),\n    height: \"100%\",\n  },\n  titleWrapper: {\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\",\n    marginBottom: theme.spacing(SPACING_HALF),\n  },\n  drawerSection: {\n    marginBottom: theme.spacing(SPACING),\n  },\n  title: {\n    marginLeft: theme.spacing(SPACING_HALF),\n  },\n  listWrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  formLabel: {\n    padding: 0,\n  },\n}));\n\nexport type FilterDrawerProps = DrawerProps;\n\n/**\n * @component FilterDrawer\n */\nfunction FilterDrawer({ open, ...rest }: FilterDrawerProps) {\n  const classes = useStyles();\n\n  const [filter, setFilter] = useFilterState();\n  const [jobFields, setJobFields] = useState<string[]>([]);\n  const [jobTypes, setJobTypes] = useState<string[]>([]);\n\n  const handleJobTypeChange = (jobType: string) => {\n    setJobTypes((prevState) => {\n      let temp = [...prevState];\n\n      const index = temp?.findIndex((item) => item === jobType);\n      if (index > -1) {\n        temp.splice(index, 1);\n      } else {\n        temp = [...temp, jobType];\n      }\n\n      return temp;\n    });\n  };\n\n  const handleJobFieldChange = (jobField: string) => {\n    setJobFields((prevState) => {\n      let temp = [...prevState];\n\n      const index = temp?.findIndex((item) => item === jobField);\n      if (index > -1) {\n        temp.splice(index, 1);\n      } else {\n        temp = [...temp, jobField];\n      }\n\n      return temp;\n    });\n  };\n\n  const handleApplyFilter = () => {\n    setFilter({ ...filter, jobFields, jobTypes });\n  };\n\n  const handleDrawerEnter = () => {\n    setJobFields(filter.jobFields);\n    setJobTypes(filter.jobTypes);\n  };\n\n  return (\n    <Drawer\n      SlideProps={{ onEnter: handleDrawerEnter }}\n      open={open}\n      variant=\"temporary\"\n      classes={{ paper: classes.root }}\n      {...rest}\n    >\n      <div className={classes.drawerWrapper}>\n        <div className={classes.drawerSection}>\n          <div className={classes.titleWrapper}>\n            <Typography noWrap component=\"span\">\n              {jobTypes.length}\n              <Typography color=\"textSecondary\" noWrap component=\"span\">\n                /{JOB_TYPES.length}\n              </Typography>\n            </Typography>\n            <Typography\n              letterSpacing={SPACING_DOUBLE}\n              noWrap\n              className={classes.title}\n            >\n              JOB TYPE\n            </Typography>\n          </div>\n\n          <div className={classes.listWrapper}>\n            {JOB_TYPES.map((jobType) => (\n              <ListItem\n                key={jobType}\n                button\n                className={classes.formLabel}\n                onClick={() => handleJobTypeChange(jobType)}\n              >\n                <Checkbox checked={jobTypes.includes(jobType)} />\n                <Typography>{jobType.toUpperCase()}</Typography>\n              </ListItem>\n            ))}\n          </div>\n        </div>\n        <div className={classes.drawerSection}>\n          <div className={classes.titleWrapper}>\n            <Typography noWrap component=\"span\">\n              {jobFields.length}\n              <Typography color=\"textSecondary\" noWrap component=\"span\">\n                /{JOB_FILEDS.length}\n              </Typography>\n            </Typography>\n            <Typography\n              noWrap\n              letterSpacing={SPACING_DOUBLE}\n              className={classes.title}\n            >\n              JOB FIELDS\n            </Typography>\n          </div>\n\n          <div className={classes.listWrapper}>\n            {JOB_FILEDS.map((field) => (\n              <ListItem\n                key={field}\n                button\n                className={classes.formLabel}\n                onClick={() => handleJobFieldChange(field)}\n              >\n                <Checkbox checked={jobFields.includes(field)} />\n                <Typography>{field.toUpperCase()}</Typography>\n              </ListItem>\n            ))}\n          </div>\n        </div>\n\n        <Button\n          onClick={handleApplyFilter}\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Apply Filter\n        </Button>\n      </div>\n    </Drawer>\n  );\n}\n\nexport default FilterDrawer;\n","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/components/SearchBar/index.tsx",["371"],"import { makeStyles } from \"@material-ui/core/styles\";\n\n// constants\nimport { SPACING, SPACING_LEAST } from \"constants/spacing\";\n\n// components\nimport Input, { InputProps } from \"components/shared/Input\";\n\n// icons\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    opacity: 0.5,\n    marginRight: theme.spacing(SPACING_LEAST),\n  },\n}));\n\nexport type SearchBarProps = {} & InputProps;\n\n/**\n * @component SearchBar\n * @summary autocomplete search bar\n */\nfunction SearchBar({ ...rest }: SearchBarProps) {\n  const classes = useStyles();\n  return (\n    <Input\n      rounded\n      {...rest}\n      startAdornment={<SearchIcon color=\"primary\" className={classes.icon} />}\n    />\n  );\n}\n\nexport default SearchBar;\n","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/components/PlanetFilterBar/index.tsx",["372","373"],"import { useState, Fragment } from \"react\";\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\n\n// components\nimport PlanetWithTitle, {\n  PlanetWithTitleProps as Planet,\n} from \"components/PlanetWithTitle\";\nimport Select from \"components/shared/Select\";\n\n// providers\nimport { useFilterState } from \"providers/FilterProvider\";\n\n// constants\nimport { PLANETS, PlanetObject } from \"constants/index\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n    width: \"100%\",\n  },\n}));\n\nexport type PlanetFilterBarProps = {\n  shrink?: boolean;\n};\n\n/**\n * @component PlanetFilterBar\n */\nfunction PlanetFilterBar({ shrink }: PlanetFilterBarProps) {\n  const classes = useStyles();\n\n  const [filter, setFilter] = useFilterState();\n\n  const isActive = (planetName: string): boolean =>\n    filter?.locations?.findIndex((_) => _.name === planetName) > -1;\n\n  const handlePlanetClick = (planet: PlanetObject) => {\n    const index = filter?.locations?.findIndex((_) => _.name === planet.name);\n    if ((index as number) > -1) {\n      setFilter((prevState) => {\n        const newState = { ...prevState };\n        newState.locations.splice(index as number, 1);\n        return newState;\n      });\n    } else {\n      setFilter((prevState) => ({\n        ...prevState,\n        locations: [...prevState.locations, planet],\n      }));\n    }\n  };\n\n  return (\n    <Fragment>\n      {!shrink && (\n        <div className={classes.root}>\n          {PLANETS.map((planet) => (\n            <PlanetWithTitle\n              key={planet.name}\n              {...planet}\n              selected={isActive(planet.name)}\n              onClick={() => handlePlanetClick(planet)}\n            />\n          ))}\n        </div>\n      )}\n      {shrink && (\n        <Select\n          label=\"LOCATION\"\n          selected={filter.locations.map((_) => _.name)}\n          onChange={(value) => {\n            const planetObjectList = value.map((_) =>\n              PLANETS.find((planet) => planet.name === _._id)\n            );\n            setFilter((prevState) => ({\n              ...prevState,\n              locations: planetObjectList as PlanetObject[],\n            }));\n          }}\n          multiSelect\n          options={PLANETS.map((planet) => ({\n            _id: planet.name,\n            label: planet.name.toUpperCase(),\n          }))}\n        />\n      )}\n    </Fragment>\n  );\n}\n\nexport default PlanetFilterBar;\n","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/utils/index.tsx",[],"/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/components/shared/Checkbox.tsx",[],"/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/components/shared/Input.tsx",["374"],"import { useState, ChangeEvent, useEffect, ReactNode } from \"react\";\nimport { useTheme } from \"@material-ui/core\";\n\nimport clsx from \"clsx\";\n\n// constants\nimport { BORDER_RADIUS, SPACING_HALF, SPACING_LEAST } from \"constants/spacing\";\n\n// components\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase, { InputBaseProps } from \"@material-ui/core/InputBase\";\nimport Box from \"@material-ui/core/Box\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Fade from \"@material-ui/core/Fade\";\n\n// icons\nimport Close from \"@material-ui/icons/Close\";\n\nexport type InputProps = {\n  value?: string;\n  startAdornment?: ReactNode;\n  endAdornment?: ReactNode;\n  onChange?: (value: string) => void;\n  disableClearButton?: boolean;\n  rounded?: boolean;\n} & Omit<InputBaseProps, \"onChange\">;\n\n/**\n * @component Input\n * @summary shared Input\n */\nfunction Input({\n  value = \"\",\n  startAdornment,\n  endAdornment,\n  rounded = false,\n  disableClearButton,\n  onChange = () => {},\n  className,\n  ...rest\n}: InputProps) {\n  const theme = useTheme();\n\n  const [_value, setValue] = useState<string>(value);\n\n  const onValueChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value as string;\n    setValue(value);\n    onChange(value);\n  };\n\n  const onClear = () => {\n    const value = \"\";\n    setValue(value);\n    onChange(value);\n  };\n\n  useEffect(() => {\n    setValue(value);\n  }, [value]);\n\n  const borderRadius = rounded ? BORDER_RADIUS * 10 : \"auto\";\n\n  const rootClasses = clsx(className);\n\n  return (\n    <Paper\n      elevation={0}\n      variant=\"outlined\"\n      style={{ borderRadius: borderRadius }}\n      data-testid=\"custom-input\"\n      className={rootClasses}\n    >\n      <Box\n        display=\"flex\"\n        px={SPACING_LEAST}\n        py={SPACING_LEAST}\n        alignItems=\"center\"\n      >\n        {startAdornment}\n        <Box flex={1} ml={SPACING_LEAST}>\n          <InputBase\n            fullWidth\n            aria-label=\"core-input\"\n            value={_value}\n            onChange={onValueChange}\n            {...rest}\n          />\n        </Box>\n        {!disableClearButton && (\n          <Fade in={_value.length > 0} data-testid=\"input-clear-button\">\n            <Box mr={endAdornment ? SPACING_HALF : 0}>\n              <IconButton onClick={onClear} size=\"small\">\n                <Close fontSize=\"small\" />\n              </IconButton>\n            </Box>\n          </Fade>\n        )}\n        {endAdornment}\n      </Box>\n    </Paper>\n  );\n}\n\nexport default Input;\n","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/components/NavLink/index.tsx",[],"/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/components/LanguageSelect/index.tsx",["375"],"import { useMemo, useState } from \"react\";\n\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\n\nimport { i18n } from \"@lingui/core\";\n\nimport {\n  useSettingsState,\n  Settings,\n  Language,\n} from \"providers/SettingsProvider\";\n\nimport { setSettingInStorage } from \"lib/storage\";\n\n// components\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  button: {},\n  image: {\n    borderRadius: \"50%\",\n    width: 24,\n    height: 24,\n    objectFit: \"cover\",\n  },\n  menu: {\n    borderRadius: theme.shape.borderRadius / 2,\n  },\n}));\n\ntype LanguageItem = { code: Language; flag: string; name: string };\nexport type LanguageSelectProps = {\n  languages: LanguageItem[];\n};\n\n/**\n * @component LanguageSelect\n */\nfunction LanguageSelect({ languages }: LanguageSelectProps) {\n  const classes = useStyles();\n\n  const [settings, setSettings] = useSettingsState();\n\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const findByCode = (code: Language) => {\n    return languages.find((_) => _.code === code);\n  };\n\n  const selectedLanguage = useMemo(() => {\n    return findByCode(settings.lang);\n  }, [settings]);\n\n  return (\n    <div>\n      <IconButton onClick={handleClick}>\n        <img\n          src={selectedLanguage?.flag}\n          alt={`${selectedLanguage?.code} language`}\n          className={classes.image}\n        />\n      </IconButton>\n      <Menu\n        classes={{ paper: classes.menu }}\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {languages.map((lang) => {\n          return (\n            <MenuItem\n              key={lang.code}\n              onClick={() => {\n                const newSettings: Settings = { ...settings, lang: lang.code };\n                setSettings(newSettings);\n                setSettingInStorage(newSettings);\n\n                i18n.activate(lang.code);\n\n                handleClose();\n              }}\n            >\n              {lang.name}\n            </MenuItem>\n          );\n        })}\n      </Menu>\n    </div>\n  );\n}\n\nexport default LanguageSelect;\n","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/components/LogoWithTitle/index.tsx",["376"],"import { makeStyles, Theme } from \"@material-ui/core/styles\";\n\n// components\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Box from \"@material-ui/core/Box\";\nimport Hidden from \"@material-ui/core/Hidden\";\n\n// constants\nimport { SPACING_LEAST } from \"constants/spacing\";\nimport { Link } from \"react-router-dom\";\n// translate\nimport { t } from \"@lingui/macro\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  logoImage: {\n    marginRight: theme.spacing(SPACING_LEAST),\n  },\n  root: {\n    textDecoration: \"none\",\n  },\n}));\n\nexport type LogoWithTitleProps = {};\n\n/**\n * @component LogoWithTitle\n */\nfunction LogoWithTitle({}: LogoWithTitleProps) {\n  const classes = useStyles();\n\n  return (\n    <Link to=\"/\" className={classes.root}>\n      <Box display=\"flex\" alignItems=\"center\">\n        <img\n          className={classes.logoImage}\n          width=\"45px\"\n          src=\"/logo.png\"\n          alt=\"logo\"\n        />\n        <Hidden smDown implementation=\"css\">\n          <ListItemText\n            primaryTypographyProps={{\n              color: \"primary\",\n            }}\n            primary=\"Planetary\"\n            secondary={t`Find your favorite remote job`}\n          />\n        </Hidden>\n      </Box>\n    </Link>\n  );\n}\n\nexport default LogoWithTitle;\n","/home/shahab/shahab-test/react/38_interviews/taikai/planetary-job-board/src/components/PlanetWithTitle/index.tsx",["377"],"import { fade, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nimport clsx from \"clsx\";\n\n// components\nimport Typography from \"@material-ui/core/Typography\";\nimport { SPACING_LEAST } from \"constants/spacing\";\nimport { PlanetObject } from \"constants/index\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    transition: theme.transitions.create([\"opacity\"]),\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    cursor: \"pointer\",\n    position: \"relative\",\n    \"&:hover $image\": {\n      transform: \"scale(1.1)\",\n    },\n    opacity: 0.5,\n  },\n  active: {\n    opacity: 1,\n    \"& $image\": {\n      transform: \"scale(1.1)\",\n    },\n    \"& $name\": {\n      fontWeight: 900,\n    },\n  },\n\n  image: {\n    width: 85,\n    height: 85,\n    objectFit: \"contain\",\n    objectPosition: \"center\",\n    marginBottom: theme.spacing(SPACING_LEAST),\n    transition: theme.transitions.create([\"transform\"]),\n  },\n  name: {\n    fontWeight: 500,\n    color: ({ color }: Pick<PlanetWithTitleProps, \"color\">) => color,\n  },\n}));\n\nexport type PlanetWithTitleProps = {\n  selected?: boolean;\n  onClick?: () => void;\n} & PlanetObject;\n\n/**\n * @component PlanetWithTitle\n */\nfunction PlanetWithTitle({\n  image,\n  name,\n  color,\n  onClick,\n  selected,\n}: PlanetWithTitleProps) {\n  const classes = useStyles({ color });\n\n  const rootClasses = clsx(classes.root, { [classes.active]: selected });\n\n  return (\n    <div className={rootClasses} onClick={onClick}>\n      <img className={classes.image} alt={`planet ${name}`} src={image} />\n      <Typography className={classes.name}>{name.toUpperCase()}</Typography>\n    </div>\n  );\n}\n\nexport default PlanetWithTitle;\n","/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/index.tsx",[],"/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/locales/pt/messages.js",[],"/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/locales/fr/messages.js",[],"/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/locales/en/messages.js",[],"/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/reportWebVitals.ts",[],"/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/sentry.ts",[],"/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/App.tsx",[],"/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/ThemedApp.tsx",["378","379","380","381","382"],"/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/providers/SettingsProvider.tsx",[],"/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/providers/FilterProvider.tsx",[],"/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/components/Compose.tsx",[],"/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/Routes.tsx",["383"],"/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/lib/storage.tsx",[],"/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/themes/default/index.ts",[],"/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/themes/default/typography.ts",[],"/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/themes/default/shadows.ts",[],"/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/themes/default/palette.ts",[],"/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/themes/default/breakpoints.ts",[],"/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/template/DefaultTemplate/index.tsx",["384","385","386","387","388","389","390","391","392"],"/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/pages/Home/index.tsx",["393","394"],"/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/pages/Jobs/index.tsx",["395","396"],"/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/pages/JobView/index.tsx",["397"],"/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/pages/AboutUs/index.tsx",["398","399","400"],"/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/constants/spacing.ts",[],"/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/components/shared/Typography.tsx",["401","402"],"/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/components/shared/Select.tsx",["403"],"/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/constants/index.ts",[],"/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/components/AppBar/index.tsx",["404","405"],"/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/components/JobCard/index.tsx",["406","407","408"],"/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/components/SearchBar/index.tsx",["409"],"/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/components/PlanetFilterBar/index.tsx",["410","411"],"/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/components/FilterDrawer/index.tsx",["412","413","414","415"],"/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/utils/index.tsx",[],"/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/components/shared/Checkbox.tsx",[],"/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/components/shared/Input.tsx",["416"],"/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/components/PlanetWithTitle/index.tsx",["417"],"/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/components/LanguageSelect/index.tsx",["418"],"/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/components/LogoWithTitle/index.tsx",["419"],"/home/shahab/shahab-test/react/38_interviews/taikai/primary/planetary-job-board/src/components/NavLink/index.tsx",[],{"ruleId":"420","replacedBy":"421"},{"ruleId":"422","replacedBy":"423"},{"ruleId":"424","severity":1,"message":"425","line":2,"column":10,"nodeType":"426","messageId":"427","endLine":2,"endColumn":18},{"ruleId":"424","severity":1,"message":"428","line":11,"column":35,"nodeType":"426","messageId":"427","endLine":11,"endColumn":40},{"ruleId":"424","severity":1,"message":"429","line":11,"column":42,"nodeType":"426","messageId":"427","endLine":11,"endColumn":48},{"ruleId":"430","severity":1,"message":"431","line":31,"column":20,"nodeType":"432","messageId":"433","endLine":31,"endColumn":38},{"ruleId":"424","severity":1,"message":"434","line":32,"column":9,"nodeType":"426","messageId":"427","endLine":32,"endColumn":16},{"ruleId":"430","severity":1,"message":"431","line":20,"column":17,"nodeType":"432","messageId":"433","endLine":20,"endColumn":32},{"ruleId":"424","severity":1,"message":"435","line":1,"column":24,"nodeType":"426","messageId":"427","endLine":1,"endColumn":33},{"ruleId":"424","severity":1,"message":"436","line":5,"column":10,"nodeType":"426","messageId":"427","endLine":5,"endColumn":26},{"ruleId":"424","severity":1,"message":"437","line":9,"column":8,"nodeType":"426","messageId":"427","endLine":9,"endColumn":13},{"ruleId":"424","severity":1,"message":"438","line":11,"column":8,"nodeType":"426","messageId":"427","endLine":11,"endColumn":17},{"ruleId":"424","severity":1,"message":"439","line":12,"column":8,"nodeType":"426","messageId":"427","endLine":12,"endColumn":14},{"ruleId":"424","severity":1,"message":"440","line":16,"column":10,"nodeType":"426","messageId":"427","endLine":16,"endColumn":17},{"ruleId":"424","severity":1,"message":"441","line":16,"column":19,"nodeType":"426","messageId":"427","endLine":16,"endColumn":33},{"ruleId":"424","severity":1,"message":"442","line":17,"column":10,"nodeType":"426","messageId":"427","endLine":17,"endColumn":20},{"ruleId":"424","severity":1,"message":"443","line":67,"column":24,"nodeType":"426","messageId":"427","endLine":67,"endColumn":33},{"ruleId":"424","severity":1,"message":"444","line":12,"column":8,"nodeType":"426","messageId":"427","endLine":12,"endColumn":9},{"ruleId":"430","severity":1,"message":"431","line":121,"column":15,"nodeType":"432","messageId":"433","endLine":121,"endColumn":28},{"ruleId":"424","severity":1,"message":"445","line":9,"column":8,"nodeType":"426","messageId":"427","endLine":9,"endColumn":23},{"ruleId":"430","severity":1,"message":"431","line":67,"column":15,"nodeType":"432","messageId":"433","endLine":67,"endColumn":28},{"ruleId":"424","severity":1,"message":"446","line":11,"column":10,"nodeType":"426","messageId":"427","endLine":11,"endColumn":11},{"ruleId":"430","severity":1,"message":"431","line":20,"column":18,"nodeType":"432","messageId":"433","endLine":20,"endColumn":34},{"ruleId":"424","severity":1,"message":"434","line":21,"column":9,"nodeType":"426","messageId":"427","endLine":21,"endColumn":16},{"ruleId":"447","severity":1,"message":"448","line":94,"column":6,"nodeType":"449","endLine":94,"endColumn":8,"suggestions":"450"},{"ruleId":"424","severity":1,"message":"451","line":12,"column":3,"nodeType":"426","messageId":"427","endLine":12,"endColumn":20},{"ruleId":"424","severity":1,"message":"452","line":14,"column":10,"nodeType":"426","messageId":"427","endLine":14,"endColumn":30},{"ruleId":"424","severity":1,"message":"453","line":98,"column":9,"nodeType":"426","messageId":"427","endLine":98,"endColumn":14},{"ruleId":"424","severity":1,"message":"454","line":12,"column":10,"nodeType":"426","messageId":"427","endLine":12,"endColumn":23},{"ruleId":"424","severity":1,"message":"434","line":31,"column":9,"nodeType":"426","messageId":"427","endLine":31,"endColumn":16},{"ruleId":"424","severity":1,"message":"455","line":10,"column":10,"nodeType":"426","messageId":"427","endLine":10,"endColumn":14},{"ruleId":"424","severity":1,"message":"456","line":14,"column":8,"nodeType":"426","messageId":"427","endLine":14,"endColumn":18},{"ruleId":"424","severity":1,"message":"457","line":15,"column":10,"nodeType":"426","messageId":"427","endLine":15,"endColumn":24},{"ruleId":"424","severity":1,"message":"458","line":1,"column":10,"nodeType":"426","messageId":"427","endLine":1,"endColumn":19},{"ruleId":"424","severity":1,"message":"459","line":6,"column":8,"nodeType":"426","messageId":"427","endLine":6,"endColumn":18},{"ruleId":"424","severity":1,"message":"460","line":7,"column":8,"nodeType":"426","messageId":"427","endLine":7,"endColumn":24},{"ruleId":"424","severity":1,"message":"461","line":8,"column":8,"nodeType":"426","messageId":"427","endLine":8,"endColumn":13},{"ruleId":"424","severity":1,"message":"440","line":4,"column":10,"nodeType":"426","messageId":"427","endLine":4,"endColumn":17},{"ruleId":"424","severity":1,"message":"462","line":1,"column":10,"nodeType":"426","messageId":"427","endLine":1,"endColumn":18},{"ruleId":"424","severity":1,"message":"463","line":6,"column":27,"nodeType":"426","messageId":"427","endLine":6,"endColumn":33},{"ruleId":"424","severity":1,"message":"453","line":42,"column":9,"nodeType":"426","messageId":"427","endLine":42,"endColumn":14},{"ruleId":"447","severity":1,"message":"464","line":62,"column":6,"nodeType":"449","endLine":62,"endColumn":16,"suggestions":"465"},{"ruleId":"430","severity":1,"message":"431","line":28,"column":24,"nodeType":"432","messageId":"433","endLine":28,"endColumn":46},{"ruleId":"424","severity":1,"message":"466","line":1,"column":10,"nodeType":"426","messageId":"427","endLine":1,"endColumn":14},{"ruleId":"424","severity":1,"message":"425","line":2,"column":10,"nodeType":"426","messageId":"427","endLine":2,"endColumn":18},{"ruleId":"424","severity":1,"message":"428","line":11,"column":35,"nodeType":"426","messageId":"427","endLine":11,"endColumn":40},{"ruleId":"424","severity":1,"message":"429","line":11,"column":42,"nodeType":"426","messageId":"427","endLine":11,"endColumn":48},{"ruleId":"430","severity":1,"message":"431","line":31,"column":20,"nodeType":"432","messageId":"433","endLine":31,"endColumn":38},{"ruleId":"424","severity":1,"message":"434","line":32,"column":9,"nodeType":"426","messageId":"427","endLine":32,"endColumn":16},{"ruleId":"430","severity":1,"message":"431","line":20,"column":17,"nodeType":"432","messageId":"433","endLine":20,"endColumn":32},{"ruleId":"424","severity":1,"message":"435","line":1,"column":24,"nodeType":"426","messageId":"427","endLine":1,"endColumn":33},{"ruleId":"424","severity":1,"message":"436","line":5,"column":10,"nodeType":"426","messageId":"427","endLine":5,"endColumn":26},{"ruleId":"424","severity":1,"message":"437","line":9,"column":8,"nodeType":"426","messageId":"427","endLine":9,"endColumn":13},{"ruleId":"424","severity":1,"message":"438","line":11,"column":8,"nodeType":"426","messageId":"427","endLine":11,"endColumn":17},{"ruleId":"424","severity":1,"message":"439","line":12,"column":8,"nodeType":"426","messageId":"427","endLine":12,"endColumn":14},{"ruleId":"424","severity":1,"message":"440","line":16,"column":10,"nodeType":"426","messageId":"427","endLine":16,"endColumn":17},{"ruleId":"424","severity":1,"message":"441","line":16,"column":19,"nodeType":"426","messageId":"427","endLine":16,"endColumn":33},{"ruleId":"424","severity":1,"message":"442","line":17,"column":10,"nodeType":"426","messageId":"427","endLine":17,"endColumn":20},{"ruleId":"424","severity":1,"message":"443","line":67,"column":24,"nodeType":"426","messageId":"427","endLine":67,"endColumn":33},{"ruleId":"424","severity":1,"message":"445","line":9,"column":8,"nodeType":"426","messageId":"427","endLine":9,"endColumn":23},{"ruleId":"430","severity":1,"message":"431","line":67,"column":15,"nodeType":"432","messageId":"433","endLine":67,"endColumn":28},{"ruleId":"424","severity":1,"message":"444","line":12,"column":8,"nodeType":"426","messageId":"427","endLine":12,"endColumn":9},{"ruleId":"430","severity":1,"message":"431","line":121,"column":15,"nodeType":"432","messageId":"433","endLine":121,"endColumn":28},{"ruleId":"447","severity":1,"message":"448","line":94,"column":6,"nodeType":"449","endLine":94,"endColumn":8,"suggestions":"467"},{"ruleId":"424","severity":1,"message":"446","line":11,"column":10,"nodeType":"426","messageId":"427","endLine":11,"endColumn":11},{"ruleId":"430","severity":1,"message":"431","line":20,"column":18,"nodeType":"432","messageId":"433","endLine":20,"endColumn":34},{"ruleId":"424","severity":1,"message":"434","line":21,"column":9,"nodeType":"426","messageId":"427","endLine":21,"endColumn":16},{"ruleId":"424","severity":1,"message":"451","line":12,"column":3,"nodeType":"426","messageId":"427","endLine":12,"endColumn":20},{"ruleId":"424","severity":1,"message":"452","line":14,"column":10,"nodeType":"426","messageId":"427","endLine":14,"endColumn":30},{"ruleId":"424","severity":1,"message":"453","line":98,"column":9,"nodeType":"426","messageId":"427","endLine":98,"endColumn":14},{"ruleId":"424","severity":1,"message":"454","line":12,"column":10,"nodeType":"426","messageId":"427","endLine":12,"endColumn":23},{"ruleId":"424","severity":1,"message":"434","line":31,"column":9,"nodeType":"426","messageId":"427","endLine":31,"endColumn":16},{"ruleId":"424","severity":1,"message":"455","line":10,"column":10,"nodeType":"426","messageId":"427","endLine":10,"endColumn":14},{"ruleId":"424","severity":1,"message":"456","line":14,"column":8,"nodeType":"426","messageId":"427","endLine":14,"endColumn":18},{"ruleId":"424","severity":1,"message":"457","line":15,"column":10,"nodeType":"426","messageId":"427","endLine":15,"endColumn":24},{"ruleId":"424","severity":1,"message":"440","line":4,"column":10,"nodeType":"426","messageId":"427","endLine":4,"endColumn":17},{"ruleId":"424","severity":1,"message":"462","line":1,"column":10,"nodeType":"426","messageId":"427","endLine":1,"endColumn":18},{"ruleId":"424","severity":1,"message":"463","line":6,"column":27,"nodeType":"426","messageId":"427","endLine":6,"endColumn":33},{"ruleId":"424","severity":1,"message":"458","line":1,"column":10,"nodeType":"426","messageId":"427","endLine":1,"endColumn":19},{"ruleId":"424","severity":1,"message":"459","line":6,"column":8,"nodeType":"426","messageId":"427","endLine":6,"endColumn":18},{"ruleId":"424","severity":1,"message":"460","line":7,"column":8,"nodeType":"426","messageId":"427","endLine":7,"endColumn":24},{"ruleId":"424","severity":1,"message":"461","line":8,"column":8,"nodeType":"426","messageId":"427","endLine":8,"endColumn":13},{"ruleId":"424","severity":1,"message":"453","line":42,"column":9,"nodeType":"426","messageId":"427","endLine":42,"endColumn":14},{"ruleId":"424","severity":1,"message":"466","line":1,"column":10,"nodeType":"426","messageId":"427","endLine":1,"endColumn":14},{"ruleId":"447","severity":1,"message":"464","line":62,"column":6,"nodeType":"449","endLine":62,"endColumn":16,"suggestions":"468"},{"ruleId":"430","severity":1,"message":"431","line":28,"column":24,"nodeType":"432","messageId":"433","endLine":28,"endColumn":46},"no-native-reassign",["469"],"no-negated-in-lhs",["470"],"@typescript-eslint/no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Switch' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'classes' is assigned a value but never used.","'ReactNode' is defined but never used.","'useScrollTrigger' is defined but never used.","'Slide' is defined but never used.","'FilterBar' is defined but never used.","'Footer' is defined but never used.","'SPACING' is defined but never used.","'SPACING_DOUBLE' is defined but never used.","'useHistory' is defined but never used.","'container' is assigned a value but never used.","'_' is defined but never used.","'DefaultTemplate' is defined but never used.","'t' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["471"],"'TypographyTypeMap' is defined but never used.","'OverridableComponent' is defined but never used.","'theme' is assigned a value but never used.","'SPACING_LEAST' is defined but never used.","'Jobs' is defined but never used.","'EarthImage' is defined but never used.","'getDisplayDate' is defined but never used.","'useEffect' is defined but never used.","'RadioGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'Radio' is defined but never used.","'useState' is defined but never used.","'Planet' is defined but never used.","React Hook useMemo has a missing dependency: 'findByCode'. Either include it or remove the dependency array.",["472"],"'fade' is defined but never used.",["473"],["474"],"no-global-assign","no-unsafe-negation",{"desc":"475","fix":"476"},{"desc":"477","fix":"478"},{"desc":"475","fix":"479"},{"desc":"477","fix":"480"},"Update the dependencies array to be: [id]",{"range":"481","text":"482"},"Update the dependencies array to be: [findByCode, settings.lang]",{"range":"483","text":"484"},{"range":"485","text":"482"},{"range":"486","text":"484"},[2217,2219],"[id]",[1436,1446],"[findByCode, settings.lang]",[2217,2219],[1436,1446]]